@import '~@sfem/scss-sugars/lib/sugars';
@import '_scss-core/variables';
@import '_scss-core/functions';
@import '_scss-core/mixins';

.#{$sfem-grid-name}-wrap {
  padding: .1px; // hack for fixing unwanted outer margins
}

.#{$sfem-grid-name},
.#{$sfem-grid-box-name} {
  box-sizing: border-box;
}

.#{$sfem-grid-name} {
  // Wraps
  @include mq-sugars-generator(#{&}-, no-wrap) {
    flex-wrap: nowrap;
  }

  display: flex;

  min-width: 0;
  margin: -#{get-pad($sfem-grid-gap-base) / 2};

  flex-wrap: wrap;
  justify-content: flex-start;

  // vertical align

  @each $item in ((top, flex-start), (bottom, flex-end), (middle, center)) {
    @include mq-sugars-generator(#{&}--va, nth($item, 1)) {
      align-items: nth($item, 2);
    }
  }

  // horizontal align

  @each $item in ((start, flex-start), (end, flex-end), (center, center), (between, space-between), (around, space-around)) {
    @include mq-sugars-generator(#{&}--ha, nth($item, 1)) {
      justify-content: nth($item, 2);
    }
  }

  // grid gaps

  @each $num in $sfem-grid-gaps {
    @include mq-sugars-generator(#{&}--gap, gap-postfix($num)) {
      margin: -#{get-pad($num) / 2};
    }
  }

  // displays

  @each $item in ((block, block), (iblock, inline-block), (iflex, inline-flex)) {
    @include mq-sugars-generator(#{&}--display, nth($item, 1)) {
      display: nth($item, 2);
    }
  }
}

.#{$sfem-grid-box-name} {

  // Basic modifers

  @include mq-sugars-generator(#{&}--offset, auto) {
    margin-left: auto;
  }
  @include mq-sugars-generator(#{&}--offset, '0') {
    margin-left: 0;
  }
  @include mq-sugars-generator(#{&}--size, auto) {
    flex: 1;
  }
  @include mq-sugars-generator(#{&}--size, min) {
    flex: 0 1 auto;
  }
  @include mq-sugars-generator(#{&}--order, first) {
    order: -1;
  }
  @include mq-sugars-generator(#{&}--order, last) {
    order: 999;
  }

  min-width: 0;
  max-width: 100%;
  // vertical align
  padding: get-pad($sfem-grid-gap-base) / 2;

  @each $item in ((top, flex-start), (bottom, flex-end), (middle, center)) {
    @include mq-sugars-generator(#{&}--va, nth($item, 1)) {
      align-self: nth($item, 2);
    }
  }

  // grid gaps

  @each $num in $sfem-grid-gaps {
    @include mq-sugars-generator('.#{$sfem-grid-name}--gap', '#{gap-postfix($num)} > #{&}') {
      padding: #{get-pad($num) / 2};
    }
  }

  // Sizes

  @each $c in $sfem-grid-columns {
    $postfix: '';

    @if length($sfem-grid-columns) > 1 {
      $postfix: 'of#{$c}';
    }

    @for $i from 1 through $c {
      $w: 100 / $c * $i * 1%;

      @include mq-sugars-generator(#{&}--order, $i + $postfix) {
        order: $i;
      }
      @include mq-sugars-generator(#{&}--size, $i + $postfix) {
        max-width: $w;

        flex: 0 0 $w;
      }
      @include mq-sugars-generator(#{&}--offset, $i + $postfix) {
        margin-left: $w;
      }
    }
  }
}
